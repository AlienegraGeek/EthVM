---

## -----
## Disks
## -----

- name: Check if EthereumJ SSD disks has been created
  command: "gcloud compute disks list --filter='name:{{ gcp.ethj.disks.name }}' --format='value(status)'"
  register: ethj_disks_created
  changed_when: false
  ignore_errors: yes

- name: Create EthereumJ SSD disk on GCP
  command: "gcloud compute disks create {{ gcp.ethj.disks.name }}-1  --size='{{ gcp.ethj.disks.size }}' --type='{{ gcp.ethj.disks.type }}' --zone='{{ gcp.zone }}'"
  changed_when: false
  when: ethj_disks_created.stdout == ""

## ---
## VMs
## ---

- name: Check if EthereumJ GCP instances has been created
  command: "gcloud compute instances list --filter='name:{{ name }}-{{ gcp.ethj.name }}' --format='value(status)'"
  register: ethj_instance_created
  changed_when: false
  ignore_errors: yes

- name: Create EthereumJ instances on GCP
  command: >
    gcloud compute instances create
    {{ name }}-{{ gcp.ethj.name }}
    --zone="{{ gcp.zone }}"
    --image-family="{{ gcp.image_family }}"
    --image-project="{{ gcp.image_project }}"
    --machine-type="{{ gcp.ethj.machine_type }}"
    --boot-disk-size="{{gcp.boot_disk_size}}"
    --boot-disk-type="{{ gcp.boot_disk_type }}"
    --metadata-from-file ssh-keys={{ gcp.ssh_private_key_file }}
    --tags="{{ gcp.ethj.name }}"
  changed_when: false
  when: ethj_instance_created.stdout == ""

- name: Attaching EthereumJ SDD disks to Kafka instances on GCP
  command: "gcloud compute instances attach-disk {{ name }}-{{ gcp.ethj.name }} --disk='{{ gcp.ethj.disks.name }}-1' --device-name='{{ gcp.ethj.disks.name }}-1' --zone='{{ gcp.zone }}'"
  changed_when: false
  when: ethj_instance_created.stdout == ""

- name: "Enabling autodelete EthereumJ SSD disks on GCP"
  command: "gcloud compute instances set-disk-auto-delete {{ name }}-{{ gcp.ethj.name }} --disk='{{ gcp.ethj.disks.name }}-1' --auto-delete --zone='{{ gcp.zone }}'"
  when: ethj_instance_created.stdout == "" and gcp.ethj.disks.autodelete == "true"

- name: Start EthereumJ instances if it's on TERMINATED status
  command: gcloud compute instances start "{{ name }}-{{ gcp.ethj.name }}"
  changed_when: false
  when: ethj_instance_created.stdout == "TERMINATED"

- name: Get metadata about EthereumJ instances
  command: gcloud compute instances list --filter='name:{{ name }}-{{ gcp.ethj.name }}' --format="value[separator=','](name, networkInterfaces[0].networkIP, networkInterfaces[0].accessConfigs[0].natIP)"
  register: ethj_instances_metadata
  ignore_errors: yes
