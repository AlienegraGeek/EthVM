type Query {
  contractByAddress(address: String!, blockNumber: BigNumber): Contract
  contractsCreatedBy(creator: String!, offset: Int = 0, limit: Int = 20, blockNumber: BigNumber): ContractSummaryPage!
}

type ContractSummaryPage {
  items: [ContractSummary!]!
  hasMore: Boolean!
}

type ContractSummary {
  address: String!
  creator: String!
  blockNumber: BigNumber!
  txHash: String!
  txFee: BigNumber!
  timestamp: Date!
}

type Contract {
  address: String
  creator: String
  init: String
  code: String
  refundAddress: String
  refundBalance: BigNumber
  createdAtBlockHash: String
  createdAtBlockNumber: BigNumber
  createdAtTransactionHash: String
  createdAtTraceAddress: String
  createdAtTimestamp: Date
  destroyedAtBlockHash: String
  destroyedAtBlockNumber: BigNumber
  destroyedAtTransactionHash: String
  destroyedAtTraceAddress: String
  destroyedAtTimestamp: Date
  ethListContractMetadata: ContractMetadata
  totalSupply: BigNumber
}

type ContractMetadata {
  address: String
  name: String
  symbol: String
  decimals: Int
  ensAddress: String
  type: String
  logo: ContractLogo
  support: ContractSupport
  social: ContractSocial
  website: String
}

type ContractLogo {
  src: String
}

type ContractSupport {
  email: String
  url: String
}

type ContractSocial {
  blog: String
  chat: String
  facebook: String
  forum: String
  github: String
  gitter: String
  instagram: String
  linkedin: String
  reddit: String
  slack: String
  telegram: String
  twitter: String
  youtube: String
}
