plugins {
  id 'org.jetbrains.kotlin.jvm'
  id 'org.jlleitschuh.gradle.ktlint'
  id 'nu.studer.jooq' version '3.0.3'
}

dependencies {

  implementation 'org.jetbrains.kotlin:kotlin-stdlib'

  implementation project(':avro')

  api 'org.jooq:jooq:3.11.12'

  jooqRuntime 'org.postgresql:postgresql:42.2.6'

  implementation 'com.beust:klaxon:5.0.5'

  implementation 'joda-time:joda-time:2.10.1'

  implementation 'io.kotlintest:kotlintest-runner-junit5:3.3.2'
  implementation 'io.mockk:mockk:1.9.3'
}

jooq {

  version = '3.11.12'
  edition = 'OSS'

  ethvm(sourceSets.main) {
    jdbc {
      driver = 'org.postgresql.Driver'
      url = 'jdbc:postgresql://localhost/ethvm_dev'
      user = 'postgres'
      password = '1234'
    }
    generator {
      name = 'org.jooq.codegen.DefaultGenerator'
      strategy {
        name = 'org.jooq.codegen.DefaultGeneratorStrategy'
      }
      database {
        name = 'org.jooq.meta.postgres.PostgresDatabase'
        inputSchema = 'public'
        excludes = '.*chunk.*|time_.*|.*tablespace.*|.*reorder.*|.*partitions|.*interpolate|first|last|locf|histogram|.*telemetry.*'
      }
      generate {
        relations = true
        deprecated = false
        records = true
        immutablePojos = false
        fluentSetters = true
      }
      target {
        packageName = 'com.ethvm.db'
        directory = 'src/main/java'
      }
    }
  }
}

project.tasks.getByName('compileJava').dependsOn -= 'generateEthvmJooqSchemaSource'
