/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables.records;


import com.ethvm.db.tables.AddressTokenCount;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressTokenCountRecord extends UpdatableRecordImpl<AddressTokenCountRecord> implements Record4<String, String, BigDecimal, Long> {

    private static final long serialVersionUID = -1780743469;

    /**
     * Setter for <code>public.address_token_count.address</code>.
     */
    public AddressTokenCountRecord setAddress(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.address_token_count.address</code>.
     */
    public String getAddress() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.address_token_count.token_type</code>.
     */
    public AddressTokenCountRecord setTokenType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.address_token_count.token_type</code>.
     */
    public String getTokenType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.address_token_count.block_number</code>.
     */
    public AddressTokenCountRecord setBlockNumber(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.address_token_count.block_number</code>.
     */
    public BigDecimal getBlockNumber() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.address_token_count.count</code>.
     */
    public AddressTokenCountRecord setCount(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.address_token_count.count</code>.
     */
    public Long getCount() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record3<String, String, BigDecimal> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, BigDecimal, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<String, String, BigDecimal, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return AddressTokenCount.ADDRESS_TOKEN_COUNT.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AddressTokenCount.ADDRESS_TOKEN_COUNT.TOKEN_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return AddressTokenCount.ADDRESS_TOKEN_COUNT.BLOCK_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field4() {
        return AddressTokenCount.ADDRESS_TOKEN_COUNT.COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getTokenType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getBlockNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getTokenType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getBlockNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value4() {
        return getCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressTokenCountRecord value1(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressTokenCountRecord value2(String value) {
        setTokenType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressTokenCountRecord value3(BigDecimal value) {
        setBlockNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressTokenCountRecord value4(Long value) {
        setCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AddressTokenCountRecord values(String value1, String value2, BigDecimal value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressTokenCountRecord
     */
    public AddressTokenCountRecord() {
        super(AddressTokenCount.ADDRESS_TOKEN_COUNT);
    }

    /**
     * Create a detached, initialised AddressTokenCountRecord
     */
    public AddressTokenCountRecord(String address, String tokenType, BigDecimal blockNumber, Long count) {
        super(AddressTokenCount.ADDRESS_TOKEN_COUNT);

        set(0, address);
        set(1, tokenType);
        set(2, blockNumber);
        set(3, count);
    }
}
