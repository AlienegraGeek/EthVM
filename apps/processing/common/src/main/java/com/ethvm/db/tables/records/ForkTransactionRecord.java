/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables.records;


import com.ethvm.db.tables.ForkTransaction;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ForkTransactionRecord extends TableRecordImpl<ForkTransactionRecord> implements Record17<String, BigDecimal, String, BigDecimal, Integer, String, String, BigDecimal, BigDecimal, BigDecimal, byte[], Long, String, String, Timestamp, String, Long> {

    private static final long serialVersionUID = 1590854303;

    /**
     * Setter for <code>public.fork_transaction.hash</code>.
     */
    public ForkTransactionRecord setHash(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.hash</code>.
     */
    public String getHash() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.fork_transaction.nonce</code>.
     */
    public ForkTransactionRecord setNonce(BigDecimal value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.nonce</code>.
     */
    public BigDecimal getNonce() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.fork_transaction.block_hash</code>.
     */
    public ForkTransactionRecord setBlockHash(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.fork_transaction.block_number</code>.
     */
    public ForkTransactionRecord setBlockNumber(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.block_number</code>.
     */
    public BigDecimal getBlockNumber() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>public.fork_transaction.transaction_index</code>.
     */
    public ForkTransactionRecord setTransactionIndex(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.transaction_index</code>.
     */
    public Integer getTransactionIndex() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.fork_transaction.from</code>.
     */
    public ForkTransactionRecord setFrom(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.from</code>.
     */
    public String getFrom() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.fork_transaction.to</code>.
     */
    public ForkTransactionRecord setTo(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.to</code>.
     */
    public String getTo() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.fork_transaction.value</code>.
     */
    public ForkTransactionRecord setValue(BigDecimal value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.value</code>.
     */
    public BigDecimal getValue() {
        return (BigDecimal) get(7);
    }

    /**
     * Setter for <code>public.fork_transaction.gas_price</code>.
     */
    public ForkTransactionRecord setGasPrice(BigDecimal value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.gas_price</code>.
     */
    public BigDecimal getGasPrice() {
        return (BigDecimal) get(8);
    }

    /**
     * Setter for <code>public.fork_transaction.gas</code>.
     */
    public ForkTransactionRecord setGas(BigDecimal value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.gas</code>.
     */
    public BigDecimal getGas() {
        return (BigDecimal) get(9);
    }

    /**
     * Setter for <code>public.fork_transaction.input</code>.
     */
    public ForkTransactionRecord setInput(byte... value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.input</code>.
     */
    public byte[] getInput() {
        return (byte[]) get(10);
    }

    /**
     * Setter for <code>public.fork_transaction.v</code>.
     */
    public ForkTransactionRecord setV(Long value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.v</code>.
     */
    public Long getV() {
        return (Long) get(11);
    }

    /**
     * Setter for <code>public.fork_transaction.r</code>.
     */
    public ForkTransactionRecord setR(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.r</code>.
     */
    public String getR() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.fork_transaction.s</code>.
     */
    public ForkTransactionRecord setS(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.s</code>.
     */
    public String getS() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.fork_transaction.timestamp</code>.
     */
    public ForkTransactionRecord setTimestamp(Timestamp value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.timestamp</code>.
     */
    public Timestamp getTimestamp() {
        return (Timestamp) get(14);
    }

    /**
     * Setter for <code>public.fork_transaction.creates</code>.
     */
    public ForkTransactionRecord setCreates(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.creates</code>.
     */
    public String getCreates() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.fork_transaction.chain_id</code>.
     */
    public ForkTransactionRecord setChainId(Long value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>public.fork_transaction.chain_id</code>.
     */
    public Long getChainId() {
        return (Long) get(16);
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<String, BigDecimal, String, BigDecimal, Integer, String, String, BigDecimal, BigDecimal, BigDecimal, byte[], Long, String, String, Timestamp, String, Long> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row17<String, BigDecimal, String, BigDecimal, Integer, String, String, BigDecimal, BigDecimal, BigDecimal, byte[], Long, String, String, Timestamp, String, Long> valuesRow() {
        return (Row17) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return ForkTransaction.FORK_TRANSACTION.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field2() {
        return ForkTransaction.FORK_TRANSACTION.NONCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return ForkTransaction.FORK_TRANSACTION.BLOCK_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field4() {
        return ForkTransaction.FORK_TRANSACTION.BLOCK_NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return ForkTransaction.FORK_TRANSACTION.TRANSACTION_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return ForkTransaction.FORK_TRANSACTION.FROM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return ForkTransaction.FORK_TRANSACTION.TO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field8() {
        return ForkTransaction.FORK_TRANSACTION.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field9() {
        return ForkTransaction.FORK_TRANSACTION.GAS_PRICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field10() {
        return ForkTransaction.FORK_TRANSACTION.GAS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<byte[]> field11() {
        return ForkTransaction.FORK_TRANSACTION.INPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field12() {
        return ForkTransaction.FORK_TRANSACTION.V;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field13() {
        return ForkTransaction.FORK_TRANSACTION.R;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return ForkTransaction.FORK_TRANSACTION.S;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field15() {
        return ForkTransaction.FORK_TRANSACTION.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field16() {
        return ForkTransaction.FORK_TRANSACTION.CREATES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field17() {
        return ForkTransaction.FORK_TRANSACTION.CHAIN_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component2() {
        return getNonce();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getBlockHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component4() {
        return getBlockNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getTransactionIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component8() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component9() {
        return getGasPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component10() {
        return getGas();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] component11() {
        return getInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component12() {
        return getV();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component13() {
        return getR();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component14() {
        return getS();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component15() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component16() {
        return getCreates();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component17() {
        return getChainId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value2() {
        return getNonce();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBlockHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value4() {
        return getBlockNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getTransactionIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getFrom();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getTo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value8() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value9() {
        return getGasPrice();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value10() {
        return getGas();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public byte[] value11() {
        return getInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value12() {
        return getV();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value13() {
        return getR();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getS();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value15() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value16() {
        return getCreates();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value17() {
        return getChainId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value1(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value2(BigDecimal value) {
        setNonce(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value3(String value) {
        setBlockHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value4(BigDecimal value) {
        setBlockNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value5(Integer value) {
        setTransactionIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value6(String value) {
        setFrom(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value7(String value) {
        setTo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value8(BigDecimal value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value9(BigDecimal value) {
        setGasPrice(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value10(BigDecimal value) {
        setGas(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value11(byte... value) {
        setInput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value12(Long value) {
        setV(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value13(String value) {
        setR(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value14(String value) {
        setS(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value15(Timestamp value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value16(String value) {
        setCreates(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord value17(Long value) {
        setChainId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ForkTransactionRecord values(String value1, BigDecimal value2, String value3, BigDecimal value4, Integer value5, String value6, String value7, BigDecimal value8, BigDecimal value9, BigDecimal value10, byte[] value11, Long value12, String value13, String value14, Timestamp value15, String value16, Long value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ForkTransactionRecord
     */
    public ForkTransactionRecord() {
        super(ForkTransaction.FORK_TRANSACTION);
    }

    /**
     * Create a detached, initialised ForkTransactionRecord
     */
    public ForkTransactionRecord(String hash, BigDecimal nonce, String blockHash, BigDecimal blockNumber, Integer transactionIndex, String from, String to, BigDecimal value, BigDecimal gasPrice, BigDecimal gas, byte[] input, Long v, String r, String s, Timestamp timestamp, String creates, Long chainId) {
        super(ForkTransaction.FORK_TRANSACTION);

        set(0, hash);
        set(1, nonce);
        set(2, blockHash);
        set(3, blockNumber);
        set(4, transactionIndex);
        set(5, from);
        set(6, to);
        set(7, value);
        set(8, gasPrice);
        set(9, gas);
        set(10, input);
        set(11, v);
        set(12, r);
        set(13, s);
        set(14, timestamp);
        set(15, creates);
        set(16, chainId);
    }
}
