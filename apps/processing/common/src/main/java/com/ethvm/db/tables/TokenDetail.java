/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables;


import com.ethvm.db.Public;
import com.ethvm.db.tables.records.TokenDetailRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TokenDetail extends TableImpl<TokenDetailRecord> {

    private static final long serialVersionUID = -251902380;

    /**
     * The reference instance of <code>public.token_detail</code>
     */
    public static final TokenDetail TOKEN_DETAIL = new TokenDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TokenDetailRecord> getRecordType() {
        return TokenDetailRecord.class;
    }

    /**
     * The column <code>public.token_detail.address</code>.
     */
    public final TableField<TokenDetailRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.CHAR(42), this, "");

    /**
     * The column <code>public.token_detail.creator</code>.
     */
    public final TableField<TokenDetailRecord, String> CREATOR = createField("creator", org.jooq.impl.SQLDataType.CHAR(42), this, "");

    /**
     * The column <code>public.token_detail.contract_type</code>.
     */
    public final TableField<TokenDetailRecord, String> CONTRACT_TYPE = createField("contract_type", org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>public.token_detail.name</code>.
     */
    public final TableField<TokenDetailRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.token_detail.symbol</code>.
     */
    public final TableField<TokenDetailRecord, String> SYMBOL = createField("symbol", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.token_detail.decimals</code>.
     */
    public final TableField<TokenDetailRecord, Integer> DECIMALS = createField("decimals", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.token_detail.logo</code>.
     */
    public final TableField<TokenDetailRecord, String> LOGO = createField("logo", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.token_detail.support</code>.
     */
    public final TableField<TokenDetailRecord, String> SUPPORT = createField("support", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.token_detail.social</code>.
     */
    public final TableField<TokenDetailRecord, String> SOCIAL = createField("social", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.token_detail.website</code>.
     */
    public final TableField<TokenDetailRecord, String> WEBSITE = createField("website", org.jooq.impl.SQLDataType.VARCHAR(256), this, "");

    /**
     * The column <code>public.token_detail.current_price</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> CURRENT_PRICE = createField("current_price", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.token_detail.circulating_supply</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> CIRCULATING_SUPPLY = createField("circulating_supply", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.token_detail.total_supply</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> TOTAL_SUPPLY = createField("total_supply", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.token_detail.market_cap</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> MARKET_CAP = createField("market_cap", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.token_detail.price_change_percentage24h</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> PRICE_CHANGE_PERCENTAGE24H = createField("price_change_percentage24h", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.token_detail.total_volume</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> TOTAL_VOLUME = createField("total_volume", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>public.token_detail.ter_name</code>.
     */
    public final TableField<TokenDetailRecord, String> TER_NAME = createField("ter_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.token_detail.ter_symbol</code>.
     */
    public final TableField<TokenDetailRecord, String> TER_SYMBOL = createField("ter_symbol", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.token_detail.image</code>.
     */
    public final TableField<TokenDetailRecord, String> IMAGE = createField("image", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.token_detail.cm_name</code>.
     */
    public final TableField<TokenDetailRecord, String> CM_NAME = createField("cm_name", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.token_detail.cm_symbol</code>.
     */
    public final TableField<TokenDetailRecord, String> CM_SYMBOL = createField("cm_symbol", org.jooq.impl.SQLDataType.VARCHAR(128), this, "");

    /**
     * The column <code>public.token_detail.cm_decimals</code>.
     */
    public final TableField<TokenDetailRecord, Integer> CM_DECIMALS = createField("cm_decimals", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.token_detail.cm_total_supply</code>.
     */
    public final TableField<TokenDetailRecord, BigDecimal> CM_TOTAL_SUPPLY = createField("cm_total_supply", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * Create a <code>public.token_detail</code> table reference
     */
    public TokenDetail() {
        this(DSL.name("token_detail"), null);
    }

    /**
     * Create an aliased <code>public.token_detail</code> table reference
     */
    public TokenDetail(String alias) {
        this(DSL.name(alias), TOKEN_DETAIL);
    }

    /**
     * Create an aliased <code>public.token_detail</code> table reference
     */
    public TokenDetail(Name alias) {
        this(alias, TOKEN_DETAIL);
    }

    private TokenDetail(Name alias, Table<TokenDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private TokenDetail(Name alias, Table<TokenDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TokenDetail(Table<O> child, ForeignKey<O, TokenDetailRecord> key) {
        super(child, key, TOKEN_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenDetail as(String alias) {
        return new TokenDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TokenDetail as(Name alias) {
        return new TokenDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TokenDetail rename(String name) {
        return new TokenDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TokenDetail rename(Name name) {
        return new TokenDetail(name, null);
    }
}
