/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db;


import com.ethvm.db.routines.ClearContractDestroyedFields;
import com.ethvm.db.tables.AddDimension;
import com.ethvm.db.tables.AlterJobSchedule;
import com.ethvm.db.tables.CreateHypertable;
import com.ethvm.db.tables.HypertableApproximateRowCount;
import com.ethvm.db.tables.HypertableRelationSize;
import com.ethvm.db.tables.HypertableRelationSizePretty;
import com.ethvm.db.tables.IndexesRelationSize;
import com.ethvm.db.tables.IndexesRelationSizePretty;
import com.ethvm.db.tables.records.AddDimensionRecord;
import com.ethvm.db.tables.records.AlterJobScheduleRecord;
import com.ethvm.db.tables.records.CreateHypertableRecord;
import com.ethvm.db.tables.records.HypertableApproximateRowCountRecord;
import com.ethvm.db.tables.records.HypertableRelationSizePrettyRecord;
import com.ethvm.db.tables.records.HypertableRelationSizeRecord;
import com.ethvm.db.tables.records.IndexesRelationSizePrettyRecord;
import com.ethvm.db.tables.records.IndexesRelationSizeRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.clear_contract_destroyed_fields</code>
     */
    public static Boolean clearContractDestroyedFields(Configuration configuration, BigDecimal blockNumber) {
        ClearContractDestroyedFields f = new ClearContractDestroyedFields();
        f.setBlockNumber(blockNumber);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.clear_contract_destroyed_fields</code> as a field.
     */
    public static Field<Boolean> clearContractDestroyedFields(BigDecimal blockNumber) {
        ClearContractDestroyedFields f = new ClearContractDestroyedFields();
        f.setBlockNumber(blockNumber);

        return f.asField();
    }

    /**
     * Get <code>public.clear_contract_destroyed_fields</code> as a field.
     */
    public static Field<Boolean> clearContractDestroyedFields(Field<BigDecimal> blockNumber) {
        ClearContractDestroyedFields f = new ClearContractDestroyedFields();
        f.setBlockNumber(blockNumber);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<AddDimensionRecord> addDimension(Configuration configuration, Object mainTable, String columnName, Integer numberPartitions, Object chunkTimeInterval, String partitioningFunc, Boolean ifNotExists) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.AddDimension.ADD_DIMENSION.call(mainTable, columnName, numberPartitions, chunkTimeInterval, partitioningFunc, ifNotExists)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AddDimension addDimension(Object mainTable, String columnName, Integer numberPartitions, Object chunkTimeInterval, String partitioningFunc, Boolean ifNotExists) {
        return com.ethvm.db.tables.AddDimension.ADD_DIMENSION.call(mainTable, columnName, numberPartitions, chunkTimeInterval, partitioningFunc, ifNotExists);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AddDimension addDimension(Field<Object> mainTable, Field<String> columnName, Field<Integer> numberPartitions, Field<Object> chunkTimeInterval, Field<String> partitioningFunc, Field<Boolean> ifNotExists) {
        return com.ethvm.db.tables.AddDimension.ADD_DIMENSION.call(mainTable, columnName, numberPartitions, chunkTimeInterval, partitioningFunc, ifNotExists);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<AlterJobScheduleRecord> alterJobSchedule(Configuration configuration, Integer jobId, Object scheduleInterval, Object maxRuntime, Integer maxRetries, Object retryPeriod, Boolean ifExists) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.AlterJobSchedule.ALTER_JOB_SCHEDULE.call(jobId, scheduleInterval, maxRuntime, maxRetries, retryPeriod, ifExists)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AlterJobSchedule alterJobSchedule(Integer jobId, Object scheduleInterval, Object maxRuntime, Integer maxRetries, Object retryPeriod, Boolean ifExists) {
        return com.ethvm.db.tables.AlterJobSchedule.ALTER_JOB_SCHEDULE.call(jobId, scheduleInterval, maxRuntime, maxRetries, retryPeriod, ifExists);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static AlterJobSchedule alterJobSchedule(Field<Integer> jobId, Field<Object> scheduleInterval, Field<Object> maxRuntime, Field<Integer> maxRetries, Field<Object> retryPeriod, Field<Boolean> ifExists) {
        return com.ethvm.db.tables.AlterJobSchedule.ALTER_JOB_SCHEDULE.call(jobId, scheduleInterval, maxRuntime, maxRetries, retryPeriod, ifExists);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<CreateHypertableRecord> createHypertable(Configuration configuration, Object mainTable, String timeColumnName, String partitioningColumn, Integer numberPartitions, String associatedSchemaName, String associatedTablePrefix, Object chunkTimeInterval, Boolean createDefaultIndexes, Boolean ifNotExists, String partitioningFunc, Boolean migrateData, String chunkTargetSize, String chunkSizingFunc, String timePartitioningFunc) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.CreateHypertable.CREATE_HYPERTABLE.call(mainTable, timeColumnName, partitioningColumn, numberPartitions, associatedSchemaName, associatedTablePrefix, chunkTimeInterval, createDefaultIndexes, ifNotExists, partitioningFunc, migrateData, chunkTargetSize, chunkSizingFunc, timePartitioningFunc)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static CreateHypertable createHypertable(Object mainTable, String timeColumnName, String partitioningColumn, Integer numberPartitions, String associatedSchemaName, String associatedTablePrefix, Object chunkTimeInterval, Boolean createDefaultIndexes, Boolean ifNotExists, String partitioningFunc, Boolean migrateData, String chunkTargetSize, String chunkSizingFunc, String timePartitioningFunc) {
        return com.ethvm.db.tables.CreateHypertable.CREATE_HYPERTABLE.call(mainTable, timeColumnName, partitioningColumn, numberPartitions, associatedSchemaName, associatedTablePrefix, chunkTimeInterval, createDefaultIndexes, ifNotExists, partitioningFunc, migrateData, chunkTargetSize, chunkSizingFunc, timePartitioningFunc);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static CreateHypertable createHypertable(Field<Object> mainTable, Field<String> timeColumnName, Field<String> partitioningColumn, Field<Integer> numberPartitions, Field<String> associatedSchemaName, Field<String> associatedTablePrefix, Field<Object> chunkTimeInterval, Field<Boolean> createDefaultIndexes, Field<Boolean> ifNotExists, Field<String> partitioningFunc, Field<Boolean> migrateData, Field<String> chunkTargetSize, Field<String> chunkSizingFunc, Field<String> timePartitioningFunc) {
        return com.ethvm.db.tables.CreateHypertable.CREATE_HYPERTABLE.call(mainTable, timeColumnName, partitioningColumn, numberPartitions, associatedSchemaName, associatedTablePrefix, chunkTimeInterval, createDefaultIndexes, ifNotExists, partitioningFunc, migrateData, chunkTargetSize, chunkSizingFunc, timePartitioningFunc);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<HypertableApproximateRowCountRecord> hypertableApproximateRowCount(Configuration configuration, Object mainTable) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.HypertableApproximateRowCount.HYPERTABLE_APPROXIMATE_ROW_COUNT.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableApproximateRowCount hypertableApproximateRowCount(Object mainTable) {
        return com.ethvm.db.tables.HypertableApproximateRowCount.HYPERTABLE_APPROXIMATE_ROW_COUNT.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableApproximateRowCount hypertableApproximateRowCount(Field<Object> mainTable) {
        return com.ethvm.db.tables.HypertableApproximateRowCount.HYPERTABLE_APPROXIMATE_ROW_COUNT.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<HypertableRelationSizeRecord> hypertableRelationSize(Configuration configuration, Object mainTable) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.HypertableRelationSize.HYPERTABLE_RELATION_SIZE.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSize hypertableRelationSize(Object mainTable) {
        return com.ethvm.db.tables.HypertableRelationSize.HYPERTABLE_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSize hypertableRelationSize(Field<Object> mainTable) {
        return com.ethvm.db.tables.HypertableRelationSize.HYPERTABLE_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<HypertableRelationSizePrettyRecord> hypertableRelationSizePretty(Configuration configuration, Object mainTable) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSizePretty hypertableRelationSizePretty(Object mainTable) {
        return com.ethvm.db.tables.HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static HypertableRelationSizePretty hypertableRelationSizePretty(Field<Object> mainTable) {
        return com.ethvm.db.tables.HypertableRelationSizePretty.HYPERTABLE_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<IndexesRelationSizeRecord> indexesRelationSize(Configuration configuration, Object mainTable) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.IndexesRelationSize.INDEXES_RELATION_SIZE.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSize indexesRelationSize(Object mainTable) {
        return com.ethvm.db.tables.IndexesRelationSize.INDEXES_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSize indexesRelationSize(Field<Object> mainTable) {
        return com.ethvm.db.tables.IndexesRelationSize.INDEXES_RELATION_SIZE.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Result<IndexesRelationSizePrettyRecord> indexesRelationSizePretty(Configuration configuration, Object mainTable) {
        return configuration.dsl().selectFrom(com.ethvm.db.tables.IndexesRelationSizePretty.INDEXES_RELATION_SIZE_PRETTY.call(mainTable)).fetch();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSizePretty indexesRelationSizePretty(Object mainTable) {
        return com.ethvm.db.tables.IndexesRelationSizePretty.INDEXES_RELATION_SIZE_PRETTY.call(mainTable);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static IndexesRelationSizePretty indexesRelationSizePretty(Field<Object> mainTable) {
        return com.ethvm.db.tables.IndexesRelationSizePretty.INDEXES_RELATION_SIZE_PRETTY.call(mainTable);
    }
}
