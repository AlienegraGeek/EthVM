/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables;


import com.ethvm.db.Indexes;
import com.ethvm.db.Keys;
import com.ethvm.db.Public;
import com.ethvm.db.tables.records.ProcessorHashLogRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProcessorHashLog extends TableImpl<ProcessorHashLogRecord> {

    private static final long serialVersionUID = -616131573;

    /**
     * The reference instance of <code>public.processor_hash_log</code>
     */
    public static final ProcessorHashLog PROCESSOR_HASH_LOG = new ProcessorHashLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProcessorHashLogRecord> getRecordType() {
        return ProcessorHashLogRecord.class;
    }

    /**
     * The column <code>public.processor_hash_log.processor_id</code>.
     */
    public final TableField<ProcessorHashLogRecord, String> PROCESSOR_ID = createField("processor_id", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>public.processor_hash_log.block_number</code>.
     */
    public final TableField<ProcessorHashLogRecord, BigDecimal> BLOCK_NUMBER = createField("block_number", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.processor_hash_log.block_hash</code>.
     */
    public final TableField<ProcessorHashLogRecord, String> BLOCK_HASH = createField("block_hash", org.jooq.impl.SQLDataType.CHAR(66).nullable(false), this, "");

    /**
     * Create a <code>public.processor_hash_log</code> table reference
     */
    public ProcessorHashLog() {
        this(DSL.name("processor_hash_log"), null);
    }

    /**
     * Create an aliased <code>public.processor_hash_log</code> table reference
     */
    public ProcessorHashLog(String alias) {
        this(DSL.name(alias), PROCESSOR_HASH_LOG);
    }

    /**
     * Create an aliased <code>public.processor_hash_log</code> table reference
     */
    public ProcessorHashLog(Name alias) {
        this(alias, PROCESSOR_HASH_LOG);
    }

    private ProcessorHashLog(Name alias, Table<ProcessorHashLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProcessorHashLog(Name alias, Table<ProcessorHashLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProcessorHashLog(Table<O> child, ForeignKey<O, ProcessorHashLogRecord> key) {
        super(child, key, PROCESSOR_HASH_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PROCESSOR_HASH_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProcessorHashLogRecord> getPrimaryKey() {
        return Keys.PROCESSOR_HASH_LOG_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProcessorHashLogRecord>> getKeys() {
        return Arrays.<UniqueKey<ProcessorHashLogRecord>>asList(Keys.PROCESSOR_HASH_LOG_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorHashLog as(String alias) {
        return new ProcessorHashLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProcessorHashLog as(Name alias) {
        return new ProcessorHashLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProcessorHashLog rename(String name) {
        return new ProcessorHashLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProcessorHashLog rename(Name name) {
        return new ProcessorHashLog(name, null);
    }
}
