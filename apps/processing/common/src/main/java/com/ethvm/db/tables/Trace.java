/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables;


import com.ethvm.db.Indexes;
import com.ethvm.db.Keys;
import com.ethvm.db.Public;
import com.ethvm.db.tables.records.TraceRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Trace extends TableImpl<TraceRecord> {

    private static final long serialVersionUID = -1539022680;

    /**
     * The reference instance of <code>public.trace</code>
     */
    public static final Trace TRACE = new Trace();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TraceRecord> getRecordType() {
        return TraceRecord.class;
    }

    /**
     * The column <code>public.trace.block_number</code>.
     */
    public final TableField<TraceRecord, BigDecimal> BLOCK_NUMBER = createField("block_number", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.trace.block_hash</code>.
     */
    public final TableField<TraceRecord, String> BLOCK_HASH = createField("block_hash", org.jooq.impl.SQLDataType.CHAR(66).nullable(false), this, "");

    /**
     * The column <code>public.trace.transaction_hash</code>.
     */
    public final TableField<TraceRecord, String> TRANSACTION_HASH = createField("transaction_hash", org.jooq.impl.SQLDataType.CHAR(66), this, "");

    /**
     * The column <code>public.trace.root_error</code>.
     */
    public final TableField<TraceRecord, String> ROOT_ERROR = createField("root_error", org.jooq.impl.SQLDataType.VARCHAR(514), this, "");

    /**
     * The column <code>public.trace.timestamp</code>.
     */
    public final TableField<TraceRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.trace.trace_count</code>.
     */
    public final TableField<TraceRecord, Integer> TRACE_COUNT = createField("trace_count", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.trace.traces</code>.
     */
    public final TableField<TraceRecord, String> TRACES = createField("traces", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>public.trace</code> table reference
     */
    public Trace() {
        this(DSL.name("trace"), null);
    }

    /**
     * Create an aliased <code>public.trace</code> table reference
     */
    public Trace(String alias) {
        this(DSL.name(alias), TRACE);
    }

    /**
     * Create an aliased <code>public.trace</code> table reference
     */
    public Trace(Name alias) {
        this(alias, TRACE);
    }

    private Trace(Name alias, Table<TraceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Trace(Name alias, Table<TraceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Trace(Table<O> child, ForeignKey<O, TraceRecord> key) {
        super(child, key, TRACE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IDX_TRACE_BY_BLOCK_HASH, Indexes.IDX_TRACE_BY_BLOCK_NUMBER, Indexes.IDX_TRACE_BY_TX_HASH, Indexes.TRACE_BLOCK_HASH_TRANSACTION_HASH_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TraceRecord>> getKeys() {
        return Arrays.<UniqueKey<TraceRecord>>asList(Keys.TRACE_BLOCK_HASH_TRANSACTION_HASH_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Trace as(String alias) {
        return new Trace(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Trace as(Name alias) {
        return new Trace(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Trace rename(String name) {
        return new Trace(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Trace rename(Name name) {
        return new Trace(name, null);
    }
}
