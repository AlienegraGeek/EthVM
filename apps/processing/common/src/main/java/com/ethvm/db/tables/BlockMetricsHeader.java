/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables;


import com.ethvm.db.Keys;
import com.ethvm.db.Public;
import com.ethvm.db.tables.records.BlockMetricsHeaderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlockMetricsHeader extends TableImpl<BlockMetricsHeaderRecord> {

    private static final long serialVersionUID = -849972377;

    /**
     * The reference instance of <code>public.block_metrics_header</code>
     */
    public static final BlockMetricsHeader BLOCK_METRICS_HEADER = new BlockMetricsHeader();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BlockMetricsHeaderRecord> getRecordType() {
        return BlockMetricsHeaderRecord.class;
    }

    /**
     * The column <code>public.block_metrics_header.number</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, BigDecimal> NUMBER = createField("number", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.hash</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.CHAR(66).nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.timestamp</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.block_time</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, Integer> BLOCK_TIME = createField("block_time", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.block_metrics_header.num_uncles</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, Integer> NUM_UNCLES = createField("num_uncles", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.difficulty</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, BigDecimal> DIFFICULTY = createField("difficulty", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.total_difficulty</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, BigDecimal> TOTAL_DIFFICULTY = createField("total_difficulty", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.total_gas_price</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, BigDecimal> TOTAL_GAS_PRICE = createField("total_gas_price", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.avg_gas_limit</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, BigDecimal> AVG_GAS_LIMIT = createField("avg_gas_limit", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_header.avg_gas_price</code>.
     */
    public final TableField<BlockMetricsHeaderRecord, BigDecimal> AVG_GAS_PRICE = createField("avg_gas_price", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.block_metrics_header</code> table reference
     */
    public BlockMetricsHeader() {
        this(DSL.name("block_metrics_header"), null);
    }

    /**
     * Create an aliased <code>public.block_metrics_header</code> table reference
     */
    public BlockMetricsHeader(String alias) {
        this(DSL.name(alias), BLOCK_METRICS_HEADER);
    }

    /**
     * Create an aliased <code>public.block_metrics_header</code> table reference
     */
    public BlockMetricsHeader(Name alias) {
        this(alias, BLOCK_METRICS_HEADER);
    }

    private BlockMetricsHeader(Name alias, Table<BlockMetricsHeaderRecord> aliased) {
        this(alias, aliased, null);
    }

    private BlockMetricsHeader(Name alias, Table<BlockMetricsHeaderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BlockMetricsHeader(Table<O> child, ForeignKey<O, BlockMetricsHeaderRecord> key) {
        super(child, key, BLOCK_METRICS_HEADER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BlockMetricsHeaderRecord>> getKeys() {
        return Arrays.<UniqueKey<BlockMetricsHeaderRecord>>asList(Keys.BLOCK_METRICS_HEADER_NUMBER_TIMESTAMP_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlockMetricsHeader as(String alias) {
        return new BlockMetricsHeader(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlockMetricsHeader as(Name alias) {
        return new BlockMetricsHeader(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BlockMetricsHeader rename(String name) {
        return new BlockMetricsHeader(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BlockMetricsHeader rename(Name name) {
        return new BlockMetricsHeader(name, null);
    }
}
