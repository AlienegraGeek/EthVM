/*
 * This file is generated by jOOQ.
 */
package com.ethvm.db.tables;


import com.ethvm.db.Keys;
import com.ethvm.db.Public;
import com.ethvm.db.tables.records.BlockMetricsTraceRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.12"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlockMetricsTrace extends TableImpl<BlockMetricsTraceRecord> {

    private static final long serialVersionUID = 941165546;

    /**
     * The reference instance of <code>public.block_metrics_trace</code>
     */
    public static final BlockMetricsTrace BLOCK_METRICS_TRACE = new BlockMetricsTrace();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BlockMetricsTraceRecord> getRecordType() {
        return BlockMetricsTraceRecord.class;
    }

    /**
     * The column <code>public.block_metrics_trace.number</code>.
     */
    public final TableField<BlockMetricsTraceRecord, BigDecimal> NUMBER = createField("number", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.hash</code>.
     */
    public final TableField<BlockMetricsTraceRecord, String> HASH = createField("hash", org.jooq.impl.SQLDataType.CHAR(66).nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.timestamp</code>.
     */
    public final TableField<BlockMetricsTraceRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.total_txs</code>.
     */
    public final TableField<BlockMetricsTraceRecord, Integer> TOTAL_TXS = createField("total_txs", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.num_successful_txs</code>.
     */
    public final TableField<BlockMetricsTraceRecord, Integer> NUM_SUCCESSFUL_TXS = createField("num_successful_txs", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.num_failed_txs</code>.
     */
    public final TableField<BlockMetricsTraceRecord, Integer> NUM_FAILED_TXS = createField("num_failed_txs", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.num_internal_txs</code>.
     */
    public final TableField<BlockMetricsTraceRecord, Integer> NUM_INTERNAL_TXS = createField("num_internal_txs", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.total_tx_fees</code>.
     */
    public final TableField<BlockMetricsTraceRecord, BigDecimal> TOTAL_TX_FEES = createField("total_tx_fees", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>public.block_metrics_trace.avg_tx_fees</code>.
     */
    public final TableField<BlockMetricsTraceRecord, BigDecimal> AVG_TX_FEES = createField("avg_tx_fees", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * Create a <code>public.block_metrics_trace</code> table reference
     */
    public BlockMetricsTrace() {
        this(DSL.name("block_metrics_trace"), null);
    }

    /**
     * Create an aliased <code>public.block_metrics_trace</code> table reference
     */
    public BlockMetricsTrace(String alias) {
        this(DSL.name(alias), BLOCK_METRICS_TRACE);
    }

    /**
     * Create an aliased <code>public.block_metrics_trace</code> table reference
     */
    public BlockMetricsTrace(Name alias) {
        this(alias, BLOCK_METRICS_TRACE);
    }

    private BlockMetricsTrace(Name alias, Table<BlockMetricsTraceRecord> aliased) {
        this(alias, aliased, null);
    }

    private BlockMetricsTrace(Name alias, Table<BlockMetricsTraceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> BlockMetricsTrace(Table<O> child, ForeignKey<O, BlockMetricsTraceRecord> key) {
        super(child, key, BLOCK_METRICS_TRACE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<BlockMetricsTraceRecord>> getKeys() {
        return Arrays.<UniqueKey<BlockMetricsTraceRecord>>asList(Keys.BLOCK_METRICS_TRACE_NUMBER_TIMESTAMP_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlockMetricsTrace as(String alias) {
        return new BlockMetricsTrace(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BlockMetricsTrace as(Name alias) {
        return new BlockMetricsTrace(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BlockMetricsTrace rename(String name) {
        return new BlockMetricsTrace(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BlockMetricsTrace rename(Name name) {
        return new BlockMetricsTrace(name, null);
    }
}
