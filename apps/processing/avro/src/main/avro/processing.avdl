@namespace("io.enkrypt.avro.processing")
protocol Processing {

  import idl "common.avdl";
  import idl "capture.avdl";


  enum EtherBalanceDeltaType {
    PREMINE_BALANCE, HARD_FORK, BLOCK_REWARD, UNCLE_REWARD, MINER_FEE, TX_FEE, TX, CONTRACT_DESTRUCTION
  }

  record EtherBalanceKeyRecord {
    string address;
  }

  record EtherBalanceDeltaRecord {
    EtherBalanceDeltaType type;
    string blockNumber;
    union { null, string } address = null;
    union { null, string } blockHash = null;
    union { null, string } transactionHash = null;
    union { null, array<int> } traceAddress = null;
    string amount;
  }

  record EtherBalanceRecord {
    string amount;
  }

  record EtherBalanceDeltaListRecord {
    array<EtherBalanceDeltaRecord> deltas;
  }

  record BlockAuthorRecord {
    string author;
    string blockNumber;
    string blockHash;
  }

  record TransactionGasPriceRecord {
    string blockNumber;
    string blockHash;
    string transactionHash;
    int transactionPosition;
    string address;
    string gasPrice;
  }

  record TransactionGasPriceListRecord {
    array<TransactionGasPriceRecord> gasPrices;
  }

  record TransactionGasUsedRecord {
    string gasUsed;
  }

  record TransactionGasUsedListRecord {
    array<TransactionGasUsedRecord> gasUsed;
  }

  record TransactionFeeRecord {
    string blockNumber;
    string blockHash;
    string transactionHash;
    int transactionPosition;
    string address;
    string transactionFee;
  }

  record TransactionFeeListRecord {
    array<TransactionFeeRecord> transactionFees;
  }

  // contracts

  record ContractLogoRecord {
    union { null, string } src;
    union { null, string } width;
    union { null, string } height;
    union { null, string } ipfs_hash;
  }

  record ContractSupportRecord {
    union { null, string } email;
    union { null, string } url;
  }

  record ContractSocialRecord {
    union { null, string } blog;
    union { null, string } chat;
    union { null, string } facebook;
    union { null, string } forum;
    union { null, string } github;
    union { null, string } gitter;
    union { null, string } instagram;
    union { null, string } linkedin;
    union { null, string } reddit;
    union { null, string } slack;
    union { null, string } telegram;
    union { null, string } twitter;
    union { null, string } youtube;
  }

  record ContractMetadataRecord {

    string name;
    string symbol;
    bytes address;
    int decimals;

    union { null, string } ens_address;
    union { null, string, io.enkrypt.avro.common.ContractType } type;
    union { null, ContractLogoRecord } logo;
    union { null, ContractSupportRecord } support;
    union { null, ContractSocialRecord } social;
    union { null, string } website;

  }


  // metrics

  record BlockMetricsRecord {
    union { null, string } hash = null;
    union { null, long } blockTime = null;
    union { null, long } timestamp = null;
    union { null, int } totalTxs = null;
    union { null, int } numSuccessfulTxs = null;
    union { null, int } numFailedTxs = null;
    union { null, int } numInternalTxs = null;
    union { null, int } numPendingTxs = null;
    union { null, int } numUncles = null;
    union { null, string } difficulty = null;
    union { null, string } totalDifficulty = null;
    union { null, string } totalGasPrice = null;
    union { null, string } avgGasLimit = null;
    union { null, string } avgGasPrice = null;
    union { null, string } totalTxFees = null;
    union { null, string } avgTxFees = null;
  }

  record MetricKeyRecord {
    long `date`;
    string name;
  }

  record MetricRecord {

    union { null, int } `int` = null;
    union { null, long } `long` = null;
    union { null, float } `float` = null;
    union { null, double } `double` = null;
    union { null, bytes } `bigInteger` = null;

  }

  // Processing Metadata

  record ProcessingMetadataKeyRecord {
    string name;
  }

  record ProcessingMetadataRecord {
    union { null, string } `string` = null;
    union { null, boolean } `boolean` = null;
    union { null, int } `int` = null;
    union { null, long } `long` = null;
    union { null, float } `float` = null;
    union { null, double } `double` = null;
    union { null, bytes } `bigInteger` = null;
  }

  // address metadata

  enum AddressMetadataType {
    OUT_TX_COUNT, IN_TX_COUNT, TOTAL_TX_COUNT, MINER, CONTRACT_CREATOR
  }

  record AddressMetadataKeyRecord {
    bytes address;
    AddressMetadataType type;
  }

  record AddressMetadataRecord {
    union { null, long } count = null;
    union { null, boolean } flag = null;
  }

}

