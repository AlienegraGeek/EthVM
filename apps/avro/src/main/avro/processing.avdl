@namespace("io.enkrypt.avro.processing")
protocol Processing {

  import idl "common.avdl";

  record FungibleTokenBalanceKeyRecord {
    union { null, io.enkrypt.avro.common.Data20 } contract;
    io.enkrypt.avro.common.Data20 address;
  }

  record FungibleTokenTransferRecord {
    io.enkrypt.avro.common.Data20 from;
    io.enkrypt.avro.common.Data20 to;
    bytes amount;

  /* null if the token is ETH */
    union { null, io.enkrypt.avro.common.Data20 } contract;

  }

  record FungibleTokenBalanceRecord {
    bytes amount;
  }

  record NonFungibleTokenBalanceKeyRecord {
    io.enkrypt.avro.common.Data20 contract;
    bytes tokenId;
  }

  record NonFungibleTokenTransferRecord {
    io.enkrypt.avro.common.Data20 contract;
    io.enkrypt.avro.common.Data20 from;
    io.enkrypt.avro.common.Data20 to;
    bytes tokenId;

  }

  record NonFungibleTokenBalanceRecord {
    io.enkrypt.avro.common.Data20 address;
  }

  record MetricKeyRecord {
    long `date`;
    string name;
  }

  record MetricRecord {

    union { null, int } intValue = null;
    union { null, long } longValue = null;
    union { null, float } floatValue = null;
    union { null, double } doubleValue = null;
    union { null, bytes } bigIntegerValue = null;

  }

  record ContractKeyRecord {

    io.enkrypt.avro.common.Data20 address;

  }

  record ContractCreationRecord {

    io.enkrypt.avro.common.ContractType type;

    io.enkrypt.avro.common.Data20 creator;
    bytes data;
    io.enkrypt.avro.common.Data32 txHash;
    io.enkrypt.avro.common.Data32 blockHash;

  }

  record ContractSuicideRecord {

    io.enkrypt.avro.common.Data32 txHash;
    io.enkrypt.avro.common.Data32 blockHash;

  }

  record ContractLogoRecord {
    union { null, string } src;
    union { null, string } width;
    union { null, string } height;
  }

  record ContractSupportRecord {
    union { null, string } email;
    union { null, string } url;
  }

  record ContractSocialRecord {
    union { null, string } blog;
    union { null, string } chat;
    union { null, string } facebook;
    union { null, string } forum;
    union { null, string } github;
    union { null, string } gitter;
    union { null, string } instagram;
    union { null, string } linkedin;
    union { null, string } reddit;
    union { null, string } slack;
    union { null, string } telegram;
    union { null, string } twitter;
    union { null, string } youtube;
  }

  record ContractMetadataRecord {

    string name;
    string symbol;
    bytes address;
    int decimals;

    union { null, string } ens_address;
    union { null, io.enkrypt.avro.common.ContractType } type;
    union { null, ContractLogoRecord } logo;
    union { null, ContractSupportRecord } support;
    union { null, ContractSocialRecord } social;
    union { null, string } website;

  }

}
