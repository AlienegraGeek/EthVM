type Query {
  addressTokenTransfers(address: String!, limit: Int, page: Int): [TokenTransfer]
  addressTokenTransfersByHolder(address: String!, holder: String!, filter: FilterEnum, limit: Int, page: Int): [TokenTransfer]
  tokenHistory(address: String!): [EthplorerTokenOperation]
  topTokenHolders(address: String!): [EthplorerTokenHolder]
}

type TokenTransfer {
  id: TokenTransferKey
  amount: String
  contract: String
  from: String
  timestamp: Int
  to: String
  tokenId: String
  transferType: BalanceType
}

type TokenTransferKey {
  hash: String
}

type EthplorerTokenOperation {
  timestamp: Int
  transactionHash: String
  tokenInfo: String
  type: String
  address: String
  from: String
  to: String
  value: Float
}

type EthplorerTokenHolder {
  address: String
  balance: Decimal
  share: Decimal
}
