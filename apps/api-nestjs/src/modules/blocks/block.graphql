type Query {
  blocks(limit: Int, page: Int): [Block]
  blockByHash(hash: String): Block
  blockByNumber(number: Int): Block
  minedBlocksByAddress(address: String, limit: Int, page: Int): [Block]
  totalNumberOfBlocks: Int!
}

type Subscription {
  newBlock: [Block]
}

type Block {
  id: Decimal
  totalDifficulty: String
  header: Header
  rewards: [Reward]
  transactions: [Transaction]
  uncles: [Uncle]
}

type Header {
  author: String
  difficulty: String
  extraData: String
  gasLimit: String
  gasUsed: String
  hash: String
  logsBloom: String
  nonce: String
  number: Int
  parentHash: String
  receiptsRoot: String
  sha3Uncles: String
  size: Int
  stateRoot: String
  timestamp: Int
  transactionsRoot: String
}

type Uncle {
  id: String
  author: String
  blockNumber: Int
  difficulty: String
  extraData: String
  gasLimit: String
  gasUsed: String
  hash: String
  logsBloom: String
  nonce: String
  number: Int
  parentHash: String
  receiptsRoot: String
  sha3Uncles: String
  size: Int
  stateRoot: String
  timestamp: Int
  transactionsRoot: String
  uncleIndex: Int
  uncleReward: String
}

type Reward {
  author: String
  rewardType: String
  value: String
}

type Transaction {
  blockHash: String
  blockNumber: Int
  creates: String
  from: String
  gas: String
  gasPrice: String
  hash: String
  input: String
  nonce: String
  r: String
  s: String
  timestamp: Int
  to: String
  transactionIndex: Int
  v: Int
  value: String
  receipt: Receipt
}

type Receipt {
  blockHash: String
  blockNumber: Int
  contractAddress: String
  cumulativeGasUsed: String
  gasUsed: String
  logsBloom: String
  numInternalTxs: Int
  root: String
  transactionHash: String
  transactionIndex: String
  logs: [Log]
  traces: [Trace]
}

type Trace {
  blockHash: String
  blockNumber: Int
  error: String
  subtraces: Int
  traceAddress: [Int]
  transactionHash: String
  transactionPosition: Int
  type: String
  action: Action
  result: Result
}

type Log {
  address: String
  data: String
  topics: [String]
}

type Action {
  TraceCallActionRecord: TraceCallActionRecord
  TraceCreateActionRecord: TraceCreateActionRecord
  TraceDestroyActionRecord: TraceDestroyActionRecord
  TraceRewardActionRecord: TraceRewardActionRecord
}

type Result {
  address: String
  code: String
  gasUsed: String
  output: String
}

type TraceCallActionRecord {
  callType: String
  from: String
  gas: String
  input: String
  to: String
  value: String
}

type TraceCreateActionRecord {
  from: String
  gas: String
  init: String
  value: String
}

type TraceDestroyActionRecord {
  address: String
  balance: String
  refundAddress: String
}

type TraceRewardActionRecord {
  author: String
  value: String
  rewardType: String
}
